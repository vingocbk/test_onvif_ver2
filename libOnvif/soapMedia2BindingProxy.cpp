/* soapMedia2BindingProxy.cpp
   Generated by gSOAP 2.8.131 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2023, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapMedia2BindingProxy.h"

Media2BindingProxy::Media2BindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

Media2BindingProxy::Media2BindingProxy(const Media2BindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

Media2BindingProxy::Media2BindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	Media2BindingProxy_init(_soap->imode, _soap->omode);
}

Media2BindingProxy::Media2BindingProxy(struct soap *_soap, const char *soap_endpoint_url)
{	this->soap = _soap;
	this->soap_own = false;
	Media2BindingProxy_init(_soap->imode, _soap->omode);
	soap_endpoint = soap_endpoint_url;
}

Media2BindingProxy::Media2BindingProxy(const char *soap_endpoint_url)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = soap_endpoint_url;
}

Media2BindingProxy::Media2BindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(iomode, iomode);
}

Media2BindingProxy::Media2BindingProxy(const char *soap_endpoint_url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(iomode, iomode);
	soap_endpoint = soap_endpoint_url;
}

Media2BindingProxy::Media2BindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(imode, omode);
}

Media2BindingProxy::~Media2BindingProxy()
{	if (this->soap_own)
	{	Media2BindingProxy::destroy();
		soap_free(this->soap);
	}
}

void Media2BindingProxy::Media2BindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        { "SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL },
        { "SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL },
        { "xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL },
        { "xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL },
        { "chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL },
        { "wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL },
        { "c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL },
        { "ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL },
        { "saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL },
        { "saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL },
        { "wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL },
        { "xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL },
        { "wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", "http://schemas.xmlsoap.org/ws/2005/02/sc", NULL },
        { "wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL },
        { "wsdd10", "http://tempuri.org/wsdd10.xsd", NULL, NULL },
        { "wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL },
        { "xmime", "http://tempuri.org/xmime.xsd", NULL, NULL },
        { "xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL },
        { "tt", "http://www.onvif.org/ver10/schema", NULL, NULL },
        { "wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL },
        { "wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL },
        { "wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL },
        { "ns1", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL },
        { "tas", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL },
        { "tdn", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL },
        { "tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL },
        { "tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL },
        { "wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL },
        { "timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL },
        { "tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL },
        { "tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL },
        { NULL, NULL, NULL, NULL} /* end of namespaces[] */
    };
	soap_set_namespaces(this->soap, namespaces);
}

Media2BindingProxy *Media2BindingProxy::copy()
{	Media2BindingProxy *dup = SOAP_NEW_UNMANAGED(Media2BindingProxy);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}

Media2BindingProxy& Media2BindingProxy::operator=(const Media2BindingProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void Media2BindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void Media2BindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void Media2BindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void Media2BindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security)
{
	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsse__Security = wsse__Security;
}

::SOAP_ENV__Header *Media2BindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *Media2BindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *Media2BindingProxy::soap_fault_subcode()
{	return ::soap_fault_subcode(this->soap);
}

const char *Media2BindingProxy::soap_fault_string()
{	return ::soap_fault_string(this->soap);
}

const char *Media2BindingProxy::soap_fault_detail()
{	return ::soap_fault_detail(this->soap);
}

int Media2BindingProxy::soap_close_socket()
{	return ::soap_closesock(this->soap);
}

int Media2BindingProxy::soap_force_close_socket()
{	return ::soap_force_closesock(this->soap);
}

void Media2BindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void Media2BindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *Media2BindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int Media2BindingProxy::send_GetServiceCapabilities(const char *soap_endpoint_url, const char *soap_action, _ns1__GetServiceCapabilities *ns1__GetServiceCapabilities)
{
	struct __ns1__GetServiceCapabilities soap_tmp___ns1__GetServiceCapabilities;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilities";
	soap_tmp___ns1__GetServiceCapabilities.ns1__GetServiceCapabilities = ns1__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities, "-ns1:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities, "-ns1:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetServiceCapabilities(_ns1__GetServiceCapabilitiesResponse &ns1__GetServiceCapabilitiesResponse)
{
	ns1__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetServiceCapabilitiesResponse.soap_get(soap, "ns1:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_CreateProfile(const char *soap_endpoint_url, const char *soap_action, _ns1__CreateProfile *ns1__CreateProfile)
{
	struct __ns1__CreateProfile soap_tmp___ns1__CreateProfile;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateProfile";
	soap_tmp___ns1__CreateProfile.ns1__CreateProfile = ns1__CreateProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateProfile(soap, &soap_tmp___ns1__CreateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateProfile(soap, &soap_tmp___ns1__CreateProfile, "-ns1:CreateProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateProfile(soap, &soap_tmp___ns1__CreateProfile, "-ns1:CreateProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_CreateProfile(_ns1__CreateProfileResponse &ns1__CreateProfileResponse)
{
	ns1__CreateProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateProfileResponse.soap_get(soap, "ns1:CreateProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetProfiles(const char *soap_endpoint_url, const char *soap_action, _ns1__GetProfiles *ns1__GetProfiles)
{
	struct __ns1__GetProfiles soap_tmp___ns1__GetProfiles;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetProfiles";
	soap_tmp___ns1__GetProfiles.ns1__GetProfiles = ns1__GetProfiles;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetProfiles(soap, &soap_tmp___ns1__GetProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetProfiles(soap, &soap_tmp___ns1__GetProfiles, "-ns1:GetProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetProfiles(soap, &soap_tmp___ns1__GetProfiles, "-ns1:GetProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetProfiles(_ns1__GetProfilesResponse &ns1__GetProfilesResponse)
{
	ns1__GetProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetProfilesResponse.soap_get(soap, "ns1:GetProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_AddConfiguration(const char *soap_endpoint_url, const char *soap_action, _ns1__AddConfiguration *ns1__AddConfiguration)
{
	struct __ns1__AddConfiguration soap_tmp___ns1__AddConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/AddConfiguration";
	soap_tmp___ns1__AddConfiguration.ns1__AddConfiguration = ns1__AddConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__AddConfiguration(soap, &soap_tmp___ns1__AddConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__AddConfiguration(soap, &soap_tmp___ns1__AddConfiguration, "-ns1:AddConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__AddConfiguration(soap, &soap_tmp___ns1__AddConfiguration, "-ns1:AddConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_AddConfiguration(_ns1__AddConfigurationResponse &ns1__AddConfigurationResponse)
{
	ns1__AddConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__AddConfigurationResponse.soap_get(soap, "ns1:AddConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_RemoveConfiguration(const char *soap_endpoint_url, const char *soap_action, _ns1__RemoveConfiguration *ns1__RemoveConfiguration)
{
	struct __ns1__RemoveConfiguration soap_tmp___ns1__RemoveConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/RemoveConfiguration";
	soap_tmp___ns1__RemoveConfiguration.ns1__RemoveConfiguration = ns1__RemoveConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__RemoveConfiguration(soap, &soap_tmp___ns1__RemoveConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__RemoveConfiguration(soap, &soap_tmp___ns1__RemoveConfiguration, "-ns1:RemoveConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__RemoveConfiguration(soap, &soap_tmp___ns1__RemoveConfiguration, "-ns1:RemoveConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_RemoveConfiguration(_ns1__RemoveConfigurationResponse &ns1__RemoveConfigurationResponse)
{
	ns1__RemoveConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__RemoveConfigurationResponse.soap_get(soap, "ns1:RemoveConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_DeleteProfile(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteProfile *ns1__DeleteProfile)
{
	struct __ns1__DeleteProfile soap_tmp___ns1__DeleteProfile;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteProfile";
	soap_tmp___ns1__DeleteProfile.ns1__DeleteProfile = ns1__DeleteProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteProfile(soap, &soap_tmp___ns1__DeleteProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteProfile(soap, &soap_tmp___ns1__DeleteProfile, "-ns1:DeleteProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteProfile(soap, &soap_tmp___ns1__DeleteProfile, "-ns1:DeleteProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_DeleteProfile(_ns1__DeleteProfileResponse &ns1__DeleteProfileResponse)
{
	ns1__DeleteProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteProfileResponse.soap_get(soap, "ns1:DeleteProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetVideoSourceConfigurations(const char *soap_endpoint_url, const char *soap_action, ns1__GetConfiguration *ns1__GetVideoSourceConfigurations)
{
	struct __ns1__GetVideoSourceConfigurations soap_tmp___ns1__GetVideoSourceConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurations";
	soap_tmp___ns1__GetVideoSourceConfigurations.ns1__GetVideoSourceConfigurations = ns1__GetVideoSourceConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVideoSourceConfigurations(soap, &soap_tmp___ns1__GetVideoSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVideoSourceConfigurations(soap, &soap_tmp___ns1__GetVideoSourceConfigurations, "-ns1:GetVideoSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVideoSourceConfigurations(soap, &soap_tmp___ns1__GetVideoSourceConfigurations, "-ns1:GetVideoSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetVideoSourceConfigurations(_ns1__GetVideoSourceConfigurationsResponse &ns1__GetVideoSourceConfigurationsResponse)
{
	ns1__GetVideoSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetVideoSourceConfigurationsResponse.soap_get(soap, "ns1:GetVideoSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetVideoEncoderConfigurations(const char *soap_endpoint_url, const char *soap_action, ns1__GetConfiguration *ns1__GetVideoEncoderConfigurations)
{
	struct __ns1__GetVideoEncoderConfigurations soap_tmp___ns1__GetVideoEncoderConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurations";
	soap_tmp___ns1__GetVideoEncoderConfigurations.ns1__GetVideoEncoderConfigurations = ns1__GetVideoEncoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVideoEncoderConfigurations(soap, &soap_tmp___ns1__GetVideoEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVideoEncoderConfigurations(soap, &soap_tmp___ns1__GetVideoEncoderConfigurations, "-ns1:GetVideoEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVideoEncoderConfigurations(soap, &soap_tmp___ns1__GetVideoEncoderConfigurations, "-ns1:GetVideoEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetVideoEncoderConfigurations(_ns1__GetVideoEncoderConfigurationsResponse &ns1__GetVideoEncoderConfigurationsResponse)
{
	ns1__GetVideoEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetVideoEncoderConfigurationsResponse.soap_get(soap, "ns1:GetVideoEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioSourceConfigurations(const char *soap_endpoint_url, const char *soap_action, ns1__GetConfiguration *ns1__GetAudioSourceConfigurations)
{
	struct __ns1__GetAudioSourceConfigurations soap_tmp___ns1__GetAudioSourceConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurations/";
	soap_tmp___ns1__GetAudioSourceConfigurations.ns1__GetAudioSourceConfigurations = ns1__GetAudioSourceConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAudioSourceConfigurations(soap, &soap_tmp___ns1__GetAudioSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAudioSourceConfigurations(soap, &soap_tmp___ns1__GetAudioSourceConfigurations, "-ns1:GetAudioSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAudioSourceConfigurations(soap, &soap_tmp___ns1__GetAudioSourceConfigurations, "-ns1:GetAudioSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioSourceConfigurations(_ns1__GetAudioSourceConfigurationsResponse &ns1__GetAudioSourceConfigurationsResponse)
{
	ns1__GetAudioSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAudioSourceConfigurationsResponse.soap_get(soap, "ns1:GetAudioSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioEncoderConfigurations(const char *soap_endpoint_url, const char *soap_action, ns1__GetConfiguration *ns1__GetAudioEncoderConfigurations)
{
	struct __ns1__GetAudioEncoderConfigurations soap_tmp___ns1__GetAudioEncoderConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurations";
	soap_tmp___ns1__GetAudioEncoderConfigurations.ns1__GetAudioEncoderConfigurations = ns1__GetAudioEncoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAudioEncoderConfigurations(soap, &soap_tmp___ns1__GetAudioEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAudioEncoderConfigurations(soap, &soap_tmp___ns1__GetAudioEncoderConfigurations, "-ns1:GetAudioEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAudioEncoderConfigurations(soap, &soap_tmp___ns1__GetAudioEncoderConfigurations, "-ns1:GetAudioEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioEncoderConfigurations(_ns1__GetAudioEncoderConfigurationsResponse &ns1__GetAudioEncoderConfigurationsResponse)
{
	ns1__GetAudioEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAudioEncoderConfigurationsResponse.soap_get(soap, "ns1:GetAudioEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAnalyticsConfigurations(const char *soap_endpoint_url, const char *soap_action, ns1__GetConfiguration *ns1__GetAnalyticsConfigurations)
{
	struct __ns1__GetAnalyticsConfigurations soap_tmp___ns1__GetAnalyticsConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurations";
	soap_tmp___ns1__GetAnalyticsConfigurations.ns1__GetAnalyticsConfigurations = ns1__GetAnalyticsConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAnalyticsConfigurations(soap, &soap_tmp___ns1__GetAnalyticsConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAnalyticsConfigurations(soap, &soap_tmp___ns1__GetAnalyticsConfigurations, "-ns1:GetAnalyticsConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAnalyticsConfigurations(soap, &soap_tmp___ns1__GetAnalyticsConfigurations, "-ns1:GetAnalyticsConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAnalyticsConfigurations(_ns1__GetAnalyticsConfigurationsResponse &ns1__GetAnalyticsConfigurationsResponse)
{
	ns1__GetAnalyticsConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAnalyticsConfigurationsResponse.soap_get(soap, "ns1:GetAnalyticsConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetMetadataConfigurations(const char *soap_endpoint_url, const char *soap_action, ns1__GetConfiguration *ns1__GetMetadataConfigurations)
{
	struct __ns1__GetMetadataConfigurations soap_tmp___ns1__GetMetadataConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurations";
	soap_tmp___ns1__GetMetadataConfigurations.ns1__GetMetadataConfigurations = ns1__GetMetadataConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMetadataConfigurations(soap, &soap_tmp___ns1__GetMetadataConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMetadataConfigurations(soap, &soap_tmp___ns1__GetMetadataConfigurations, "-ns1:GetMetadataConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMetadataConfigurations(soap, &soap_tmp___ns1__GetMetadataConfigurations, "-ns1:GetMetadataConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetMetadataConfigurations(_ns1__GetMetadataConfigurationsResponse &ns1__GetMetadataConfigurationsResponse)
{
	ns1__GetMetadataConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMetadataConfigurationsResponse.soap_get(soap, "ns1:GetMetadataConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioOutputConfigurations(const char *soap_endpoint_url, const char *soap_action, ns1__GetConfiguration *ns1__GetAudioOutputConfigurations)
{
	struct __ns1__GetAudioOutputConfigurations soap_tmp___ns1__GetAudioOutputConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurations";
	soap_tmp___ns1__GetAudioOutputConfigurations.ns1__GetAudioOutputConfigurations = ns1__GetAudioOutputConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAudioOutputConfigurations(soap, &soap_tmp___ns1__GetAudioOutputConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAudioOutputConfigurations(soap, &soap_tmp___ns1__GetAudioOutputConfigurations, "-ns1:GetAudioOutputConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAudioOutputConfigurations(soap, &soap_tmp___ns1__GetAudioOutputConfigurations, "-ns1:GetAudioOutputConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioOutputConfigurations(_ns1__GetAudioOutputConfigurationsResponse &ns1__GetAudioOutputConfigurationsResponse)
{
	ns1__GetAudioOutputConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAudioOutputConfigurationsResponse.soap_get(soap, "ns1:GetAudioOutputConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioDecoderConfigurations(const char *soap_endpoint_url, const char *soap_action, ns1__GetConfiguration *ns1__GetAudioDecoderConfigurations)
{
	struct __ns1__GetAudioDecoderConfigurations soap_tmp___ns1__GetAudioDecoderConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurations";
	soap_tmp___ns1__GetAudioDecoderConfigurations.ns1__GetAudioDecoderConfigurations = ns1__GetAudioDecoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAudioDecoderConfigurations(soap, &soap_tmp___ns1__GetAudioDecoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAudioDecoderConfigurations(soap, &soap_tmp___ns1__GetAudioDecoderConfigurations, "-ns1:GetAudioDecoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAudioDecoderConfigurations(soap, &soap_tmp___ns1__GetAudioDecoderConfigurations, "-ns1:GetAudioDecoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioDecoderConfigurations(_ns1__GetAudioDecoderConfigurationsResponse &ns1__GetAudioDecoderConfigurationsResponse)
{
	ns1__GetAudioDecoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAudioDecoderConfigurationsResponse.soap_get(soap, "ns1:GetAudioDecoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetVideoSourceConfiguration(const char *soap_endpoint_url, const char *soap_action, _ns1__SetVideoSourceConfiguration *ns1__SetVideoSourceConfiguration)
{
	struct __ns1__SetVideoSourceConfiguration soap_tmp___ns1__SetVideoSourceConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfiguration";
	soap_tmp___ns1__SetVideoSourceConfiguration.ns1__SetVideoSourceConfiguration = ns1__SetVideoSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetVideoSourceConfiguration(soap, &soap_tmp___ns1__SetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetVideoSourceConfiguration(soap, &soap_tmp___ns1__SetVideoSourceConfiguration, "-ns1:SetVideoSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetVideoSourceConfiguration(soap, &soap_tmp___ns1__SetVideoSourceConfiguration, "-ns1:SetVideoSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetVideoSourceConfiguration(ns1__SetConfigurationResponse &ns1__SetVideoSourceConfigurationResponse)
{
	struct __ns1__SetVideoSourceConfigurationResponse *soap_tmp___ns1__SetVideoSourceConfigurationResponse;
	ns1__SetVideoSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__SetVideoSourceConfigurationResponse = soap_get___ns1__SetVideoSourceConfigurationResponse(soap, NULL, "-ns1:SetVideoSourceConfigurationResponse", NULL);
	if (!soap_tmp___ns1__SetVideoSourceConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__SetVideoSourceConfigurationResponse = soap_tmp___ns1__SetVideoSourceConfigurationResponse->ns1__SetVideoSourceConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetVideoEncoderConfiguration(const char *soap_endpoint_url, const char *soap_action, _ns1__SetVideoEncoderConfiguration *ns1__SetVideoEncoderConfiguration)
{
	struct __ns1__SetVideoEncoderConfiguration soap_tmp___ns1__SetVideoEncoderConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfiguration";
	soap_tmp___ns1__SetVideoEncoderConfiguration.ns1__SetVideoEncoderConfiguration = ns1__SetVideoEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetVideoEncoderConfiguration(soap, &soap_tmp___ns1__SetVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetVideoEncoderConfiguration(soap, &soap_tmp___ns1__SetVideoEncoderConfiguration, "-ns1:SetVideoEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetVideoEncoderConfiguration(soap, &soap_tmp___ns1__SetVideoEncoderConfiguration, "-ns1:SetVideoEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetVideoEncoderConfiguration(ns1__SetConfigurationResponse &ns1__SetVideoEncoderConfigurationResponse)
{
	struct __ns1__SetVideoEncoderConfigurationResponse *soap_tmp___ns1__SetVideoEncoderConfigurationResponse;
	ns1__SetVideoEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__SetVideoEncoderConfigurationResponse = soap_get___ns1__SetVideoEncoderConfigurationResponse(soap, NULL, "-ns1:SetVideoEncoderConfigurationResponse", NULL);
	if (!soap_tmp___ns1__SetVideoEncoderConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__SetVideoEncoderConfigurationResponse = soap_tmp___ns1__SetVideoEncoderConfigurationResponse->ns1__SetVideoEncoderConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetAudioSourceConfiguration(const char *soap_endpoint_url, const char *soap_action, _ns1__SetAudioSourceConfiguration *ns1__SetAudioSourceConfiguration)
{
	struct __ns1__SetAudioSourceConfiguration soap_tmp___ns1__SetAudioSourceConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfiguration";
	soap_tmp___ns1__SetAudioSourceConfiguration.ns1__SetAudioSourceConfiguration = ns1__SetAudioSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetAudioSourceConfiguration(soap, &soap_tmp___ns1__SetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetAudioSourceConfiguration(soap, &soap_tmp___ns1__SetAudioSourceConfiguration, "-ns1:SetAudioSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetAudioSourceConfiguration(soap, &soap_tmp___ns1__SetAudioSourceConfiguration, "-ns1:SetAudioSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetAudioSourceConfiguration(ns1__SetConfigurationResponse &ns1__SetAudioSourceConfigurationResponse)
{
	struct __ns1__SetAudioSourceConfigurationResponse *soap_tmp___ns1__SetAudioSourceConfigurationResponse;
	ns1__SetAudioSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__SetAudioSourceConfigurationResponse = soap_get___ns1__SetAudioSourceConfigurationResponse(soap, NULL, "-ns1:SetAudioSourceConfigurationResponse", NULL);
	if (!soap_tmp___ns1__SetAudioSourceConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__SetAudioSourceConfigurationResponse = soap_tmp___ns1__SetAudioSourceConfigurationResponse->ns1__SetAudioSourceConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetAudioEncoderConfiguration(const char *soap_endpoint_url, const char *soap_action, _ns1__SetAudioEncoderConfiguration *ns1__SetAudioEncoderConfiguration)
{
	struct __ns1__SetAudioEncoderConfiguration soap_tmp___ns1__SetAudioEncoderConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfiguration";
	soap_tmp___ns1__SetAudioEncoderConfiguration.ns1__SetAudioEncoderConfiguration = ns1__SetAudioEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetAudioEncoderConfiguration(soap, &soap_tmp___ns1__SetAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetAudioEncoderConfiguration(soap, &soap_tmp___ns1__SetAudioEncoderConfiguration, "-ns1:SetAudioEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetAudioEncoderConfiguration(soap, &soap_tmp___ns1__SetAudioEncoderConfiguration, "-ns1:SetAudioEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetAudioEncoderConfiguration(ns1__SetConfigurationResponse &ns1__SetAudioEncoderConfigurationResponse)
{
	struct __ns1__SetAudioEncoderConfigurationResponse *soap_tmp___ns1__SetAudioEncoderConfigurationResponse;
	ns1__SetAudioEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__SetAudioEncoderConfigurationResponse = soap_get___ns1__SetAudioEncoderConfigurationResponse(soap, NULL, "-ns1:SetAudioEncoderConfigurationResponse", NULL);
	if (!soap_tmp___ns1__SetAudioEncoderConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__SetAudioEncoderConfigurationResponse = soap_tmp___ns1__SetAudioEncoderConfigurationResponse->ns1__SetAudioEncoderConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetMetadataConfiguration(const char *soap_endpoint_url, const char *soap_action, _ns1__SetMetadataConfiguration *ns1__SetMetadataConfiguration)
{
	struct __ns1__SetMetadataConfiguration soap_tmp___ns1__SetMetadataConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetMetadataConfiguration";
	soap_tmp___ns1__SetMetadataConfiguration.ns1__SetMetadataConfiguration = ns1__SetMetadataConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetMetadataConfiguration(soap, &soap_tmp___ns1__SetMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetMetadataConfiguration(soap, &soap_tmp___ns1__SetMetadataConfiguration, "-ns1:SetMetadataConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetMetadataConfiguration(soap, &soap_tmp___ns1__SetMetadataConfiguration, "-ns1:SetMetadataConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetMetadataConfiguration(ns1__SetConfigurationResponse &ns1__SetMetadataConfigurationResponse)
{
	struct __ns1__SetMetadataConfigurationResponse *soap_tmp___ns1__SetMetadataConfigurationResponse;
	ns1__SetMetadataConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__SetMetadataConfigurationResponse = soap_get___ns1__SetMetadataConfigurationResponse(soap, NULL, "-ns1:SetMetadataConfigurationResponse", NULL);
	if (!soap_tmp___ns1__SetMetadataConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__SetMetadataConfigurationResponse = soap_tmp___ns1__SetMetadataConfigurationResponse->ns1__SetMetadataConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetAudioOutputConfiguration(const char *soap_endpoint_url, const char *soap_action, _ns1__SetAudioOutputConfiguration *ns1__SetAudioOutputConfiguration)
{
	struct __ns1__SetAudioOutputConfiguration soap_tmp___ns1__SetAudioOutputConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfiguration";
	soap_tmp___ns1__SetAudioOutputConfiguration.ns1__SetAudioOutputConfiguration = ns1__SetAudioOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetAudioOutputConfiguration(soap, &soap_tmp___ns1__SetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetAudioOutputConfiguration(soap, &soap_tmp___ns1__SetAudioOutputConfiguration, "-ns1:SetAudioOutputConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetAudioOutputConfiguration(soap, &soap_tmp___ns1__SetAudioOutputConfiguration, "-ns1:SetAudioOutputConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetAudioOutputConfiguration(ns1__SetConfigurationResponse &ns1__SetAudioOutputConfigurationResponse)
{
	struct __ns1__SetAudioOutputConfigurationResponse *soap_tmp___ns1__SetAudioOutputConfigurationResponse;
	ns1__SetAudioOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__SetAudioOutputConfigurationResponse = soap_get___ns1__SetAudioOutputConfigurationResponse(soap, NULL, "-ns1:SetAudioOutputConfigurationResponse", NULL);
	if (!soap_tmp___ns1__SetAudioOutputConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__SetAudioOutputConfigurationResponse = soap_tmp___ns1__SetAudioOutputConfigurationResponse->ns1__SetAudioOutputConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetAudioDecoderConfiguration(const char *soap_endpoint_url, const char *soap_action, _ns1__SetAudioDecoderConfiguration *ns1__SetAudioDecoderConfiguration)
{
	struct __ns1__SetAudioDecoderConfiguration soap_tmp___ns1__SetAudioDecoderConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfiguration";
	soap_tmp___ns1__SetAudioDecoderConfiguration.ns1__SetAudioDecoderConfiguration = ns1__SetAudioDecoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetAudioDecoderConfiguration(soap, &soap_tmp___ns1__SetAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetAudioDecoderConfiguration(soap, &soap_tmp___ns1__SetAudioDecoderConfiguration, "-ns1:SetAudioDecoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetAudioDecoderConfiguration(soap, &soap_tmp___ns1__SetAudioDecoderConfiguration, "-ns1:SetAudioDecoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetAudioDecoderConfiguration(ns1__SetConfigurationResponse &ns1__SetAudioDecoderConfigurationResponse)
{
	struct __ns1__SetAudioDecoderConfigurationResponse *soap_tmp___ns1__SetAudioDecoderConfigurationResponse;
	ns1__SetAudioDecoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__SetAudioDecoderConfigurationResponse = soap_get___ns1__SetAudioDecoderConfigurationResponse(soap, NULL, "-ns1:SetAudioDecoderConfigurationResponse", NULL);
	if (!soap_tmp___ns1__SetAudioDecoderConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__SetAudioDecoderConfigurationResponse = soap_tmp___ns1__SetAudioDecoderConfigurationResponse->ns1__SetAudioDecoderConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetVideoSourceConfigurationOptions(const char *soap_endpoint_url, const char *soap_action, ns1__GetConfiguration *ns1__GetVideoSourceConfigurationOptions)
{
	struct __ns1__GetVideoSourceConfigurationOptions soap_tmp___ns1__GetVideoSourceConfigurationOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationOptions/";
	soap_tmp___ns1__GetVideoSourceConfigurationOptions.ns1__GetVideoSourceConfigurationOptions = ns1__GetVideoSourceConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns1__GetVideoSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns1__GetVideoSourceConfigurationOptions, "-ns1:GetVideoSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns1__GetVideoSourceConfigurationOptions, "-ns1:GetVideoSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetVideoSourceConfigurationOptions(_ns1__GetVideoSourceConfigurationOptionsResponse &ns1__GetVideoSourceConfigurationOptionsResponse)
{
	ns1__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetVideoSourceConfigurationOptionsResponse.soap_get(soap, "ns1:GetVideoSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetVideoEncoderConfigurationOptions(const char *soap_endpoint_url, const char *soap_action, ns1__GetConfiguration *ns1__GetVideoEncoderConfigurationOptions)
{
	struct __ns1__GetVideoEncoderConfigurationOptions soap_tmp___ns1__GetVideoEncoderConfigurationOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptions";
	soap_tmp___ns1__GetVideoEncoderConfigurationOptions.ns1__GetVideoEncoderConfigurationOptions = ns1__GetVideoEncoderConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___ns1__GetVideoEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___ns1__GetVideoEncoderConfigurationOptions, "-ns1:GetVideoEncoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___ns1__GetVideoEncoderConfigurationOptions, "-ns1:GetVideoEncoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetVideoEncoderConfigurationOptions(_ns1__GetVideoEncoderConfigurationOptionsResponse &ns1__GetVideoEncoderConfigurationOptionsResponse)
{
	ns1__GetVideoEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetVideoEncoderConfigurationOptionsResponse.soap_get(soap, "ns1:GetVideoEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioSourceConfigurationOptions(const char *soap_endpoint_url, const char *soap_action, ns1__GetConfiguration *ns1__GetAudioSourceConfigurationOptions)
{
	struct __ns1__GetAudioSourceConfigurationOptions soap_tmp___ns1__GetAudioSourceConfigurationOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptions";
	soap_tmp___ns1__GetAudioSourceConfigurationOptions.ns1__GetAudioSourceConfigurationOptions = ns1__GetAudioSourceConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns1__GetAudioSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns1__GetAudioSourceConfigurationOptions, "-ns1:GetAudioSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns1__GetAudioSourceConfigurationOptions, "-ns1:GetAudioSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioSourceConfigurationOptions(_ns1__GetAudioSourceConfigurationOptionsResponse &ns1__GetAudioSourceConfigurationOptionsResponse)
{
	ns1__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAudioSourceConfigurationOptionsResponse.soap_get(soap, "ns1:GetAudioSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioEncoderConfigurationOptions(const char *soap_endpoint_url, const char *soap_action, ns1__GetConfiguration *ns1__GetAudioEncoderConfigurationOptions)
{
	struct __ns1__GetAudioEncoderConfigurationOptions soap_tmp___ns1__GetAudioEncoderConfigurationOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptions";
	soap_tmp___ns1__GetAudioEncoderConfigurationOptions.ns1__GetAudioEncoderConfigurationOptions = ns1__GetAudioEncoderConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___ns1__GetAudioEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___ns1__GetAudioEncoderConfigurationOptions, "-ns1:GetAudioEncoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___ns1__GetAudioEncoderConfigurationOptions, "-ns1:GetAudioEncoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioEncoderConfigurationOptions(_ns1__GetAudioEncoderConfigurationOptionsResponse &ns1__GetAudioEncoderConfigurationOptionsResponse)
{
	ns1__GetAudioEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAudioEncoderConfigurationOptionsResponse.soap_get(soap, "ns1:GetAudioEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetMetadataConfigurationOptions(const char *soap_endpoint_url, const char *soap_action, ns1__GetConfiguration *ns1__GetMetadataConfigurationOptions)
{
	struct __ns1__GetMetadataConfigurationOptions soap_tmp___ns1__GetMetadataConfigurationOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptions";
	soap_tmp___ns1__GetMetadataConfigurationOptions.ns1__GetMetadataConfigurationOptions = ns1__GetMetadataConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMetadataConfigurationOptions(soap, &soap_tmp___ns1__GetMetadataConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMetadataConfigurationOptions(soap, &soap_tmp___ns1__GetMetadataConfigurationOptions, "-ns1:GetMetadataConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMetadataConfigurationOptions(soap, &soap_tmp___ns1__GetMetadataConfigurationOptions, "-ns1:GetMetadataConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetMetadataConfigurationOptions(_ns1__GetMetadataConfigurationOptionsResponse &ns1__GetMetadataConfigurationOptionsResponse)
{
	ns1__GetMetadataConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMetadataConfigurationOptionsResponse.soap_get(soap, "ns1:GetMetadataConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioOutputConfigurationOptions(const char *soap_endpoint_url, const char *soap_action, ns1__GetConfiguration *ns1__GetAudioOutputConfigurationOptions)
{
	struct __ns1__GetAudioOutputConfigurationOptions soap_tmp___ns1__GetAudioOutputConfigurationOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptions";
	soap_tmp___ns1__GetAudioOutputConfigurationOptions.ns1__GetAudioOutputConfigurationOptions = ns1__GetAudioOutputConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns1__GetAudioOutputConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns1__GetAudioOutputConfigurationOptions, "-ns1:GetAudioOutputConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns1__GetAudioOutputConfigurationOptions, "-ns1:GetAudioOutputConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioOutputConfigurationOptions(_ns1__GetAudioOutputConfigurationOptionsResponse &ns1__GetAudioOutputConfigurationOptionsResponse)
{
	ns1__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAudioOutputConfigurationOptionsResponse.soap_get(soap, "ns1:GetAudioOutputConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioDecoderConfigurationOptions(const char *soap_endpoint_url, const char *soap_action, ns1__GetConfiguration *ns1__GetAudioDecoderConfigurationOptions)
{
	struct __ns1__GetAudioDecoderConfigurationOptions soap_tmp___ns1__GetAudioDecoderConfigurationOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptions";
	soap_tmp___ns1__GetAudioDecoderConfigurationOptions.ns1__GetAudioDecoderConfigurationOptions = ns1__GetAudioDecoderConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___ns1__GetAudioDecoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___ns1__GetAudioDecoderConfigurationOptions, "-ns1:GetAudioDecoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___ns1__GetAudioDecoderConfigurationOptions, "-ns1:GetAudioDecoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioDecoderConfigurationOptions(_ns1__GetAudioDecoderConfigurationOptionsResponse &ns1__GetAudioDecoderConfigurationOptionsResponse)
{
	ns1__GetAudioDecoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAudioDecoderConfigurationOptionsResponse.soap_get(soap, "ns1:GetAudioDecoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetVideoEncoderInstances(const char *soap_endpoint_url, const char *soap_action, _ns1__GetVideoEncoderInstances *ns1__GetVideoEncoderInstances)
{
	struct __ns1__GetVideoEncoderInstances soap_tmp___ns1__GetVideoEncoderInstances;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderInstances";
	soap_tmp___ns1__GetVideoEncoderInstances.ns1__GetVideoEncoderInstances = ns1__GetVideoEncoderInstances;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVideoEncoderInstances(soap, &soap_tmp___ns1__GetVideoEncoderInstances);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVideoEncoderInstances(soap, &soap_tmp___ns1__GetVideoEncoderInstances, "-ns1:GetVideoEncoderInstances", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVideoEncoderInstances(soap, &soap_tmp___ns1__GetVideoEncoderInstances, "-ns1:GetVideoEncoderInstances", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetVideoEncoderInstances(_ns1__GetVideoEncoderInstancesResponse &ns1__GetVideoEncoderInstancesResponse)
{
	ns1__GetVideoEncoderInstancesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetVideoEncoderInstancesResponse.soap_get(soap, "ns1:GetVideoEncoderInstancesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetStreamUri(const char *soap_endpoint_url, const char *soap_action, _ns1__GetStreamUri *ns1__GetStreamUri)
{
	struct __ns1__GetStreamUri soap_tmp___ns1__GetStreamUri;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetStreamUri";
	soap_tmp___ns1__GetStreamUri.ns1__GetStreamUri = ns1__GetStreamUri;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetStreamUri(soap, &soap_tmp___ns1__GetStreamUri);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetStreamUri(soap, &soap_tmp___ns1__GetStreamUri, "-ns1:GetStreamUri", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetStreamUri(soap, &soap_tmp___ns1__GetStreamUri, "-ns1:GetStreamUri", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetStreamUri(_ns1__GetStreamUriResponse &ns1__GetStreamUriResponse)
{
	ns1__GetStreamUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetStreamUriResponse.soap_get(soap, "ns1:GetStreamUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_StartMulticastStreaming(const char *soap_endpoint_url, const char *soap_action, ns1__StartStopMulticastStreaming *ns1__StartMulticastStreaming)
{
	struct __ns1__StartMulticastStreaming soap_tmp___ns1__StartMulticastStreaming;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/StartMulticastStreaming";
	soap_tmp___ns1__StartMulticastStreaming.ns1__StartMulticastStreaming = ns1__StartMulticastStreaming;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__StartMulticastStreaming(soap, &soap_tmp___ns1__StartMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__StartMulticastStreaming(soap, &soap_tmp___ns1__StartMulticastStreaming, "-ns1:StartMulticastStreaming", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__StartMulticastStreaming(soap, &soap_tmp___ns1__StartMulticastStreaming, "-ns1:StartMulticastStreaming", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_StartMulticastStreaming(ns1__SetConfigurationResponse &ns1__StartMulticastStreamingResponse)
{
	struct __ns1__StartMulticastStreamingResponse *soap_tmp___ns1__StartMulticastStreamingResponse;
	ns1__StartMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__StartMulticastStreamingResponse = soap_get___ns1__StartMulticastStreamingResponse(soap, NULL, "-ns1:StartMulticastStreamingResponse", NULL);
	if (!soap_tmp___ns1__StartMulticastStreamingResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__StartMulticastStreamingResponse = soap_tmp___ns1__StartMulticastStreamingResponse->ns1__StartMulticastStreamingResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_StopMulticastStreaming(const char *soap_endpoint_url, const char *soap_action, ns1__StartStopMulticastStreaming *ns1__StopMulticastStreaming)
{
	struct __ns1__StopMulticastStreaming soap_tmp___ns1__StopMulticastStreaming;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/StopMulticastStreaming";
	soap_tmp___ns1__StopMulticastStreaming.ns1__StopMulticastStreaming = ns1__StopMulticastStreaming;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__StopMulticastStreaming(soap, &soap_tmp___ns1__StopMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__StopMulticastStreaming(soap, &soap_tmp___ns1__StopMulticastStreaming, "-ns1:StopMulticastStreaming", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__StopMulticastStreaming(soap, &soap_tmp___ns1__StopMulticastStreaming, "-ns1:StopMulticastStreaming", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_StopMulticastStreaming(ns1__SetConfigurationResponse &ns1__StopMulticastStreamingResponse)
{
	struct __ns1__StopMulticastStreamingResponse *soap_tmp___ns1__StopMulticastStreamingResponse;
	ns1__StopMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__StopMulticastStreamingResponse = soap_get___ns1__StopMulticastStreamingResponse(soap, NULL, "-ns1:StopMulticastStreamingResponse", NULL);
	if (!soap_tmp___ns1__StopMulticastStreamingResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__StopMulticastStreamingResponse = soap_tmp___ns1__StopMulticastStreamingResponse->ns1__StopMulticastStreamingResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetSynchronizationPoint(const char *soap_endpoint_url, const char *soap_action, _ns1__SetSynchronizationPoint *ns1__SetSynchronizationPoint)
{
	struct __ns1__SetSynchronizationPoint soap_tmp___ns1__SetSynchronizationPoint;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPoint";
	soap_tmp___ns1__SetSynchronizationPoint.ns1__SetSynchronizationPoint = ns1__SetSynchronizationPoint;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetSynchronizationPoint(soap, &soap_tmp___ns1__SetSynchronizationPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetSynchronizationPoint(soap, &soap_tmp___ns1__SetSynchronizationPoint, "-ns1:SetSynchronizationPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetSynchronizationPoint(soap, &soap_tmp___ns1__SetSynchronizationPoint, "-ns1:SetSynchronizationPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetSynchronizationPoint(_ns1__SetSynchronizationPointResponse &ns1__SetSynchronizationPointResponse)
{
	ns1__SetSynchronizationPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetSynchronizationPointResponse.soap_get(soap, "ns1:SetSynchronizationPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetSnapshotUri(const char *soap_endpoint_url, const char *soap_action, _ns1__GetSnapshotUri *ns1__GetSnapshotUri)
{
	struct __ns1__GetSnapshotUri soap_tmp___ns1__GetSnapshotUri;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetSnapshotUri";
	soap_tmp___ns1__GetSnapshotUri.ns1__GetSnapshotUri = ns1__GetSnapshotUri;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSnapshotUri(soap, &soap_tmp___ns1__GetSnapshotUri);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSnapshotUri(soap, &soap_tmp___ns1__GetSnapshotUri, "-ns1:GetSnapshotUri", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSnapshotUri(soap, &soap_tmp___ns1__GetSnapshotUri, "-ns1:GetSnapshotUri", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetSnapshotUri(_ns1__GetSnapshotUriResponse &ns1__GetSnapshotUriResponse)
{
	ns1__GetSnapshotUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSnapshotUriResponse.soap_get(soap, "ns1:GetSnapshotUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetVideoSourceModes(const char *soap_endpoint_url, const char *soap_action, _ns1__GetVideoSourceModes *ns1__GetVideoSourceModes)
{
	struct __ns1__GetVideoSourceModes soap_tmp___ns1__GetVideoSourceModes;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModes";
	soap_tmp___ns1__GetVideoSourceModes.ns1__GetVideoSourceModes = ns1__GetVideoSourceModes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVideoSourceModes(soap, &soap_tmp___ns1__GetVideoSourceModes);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVideoSourceModes(soap, &soap_tmp___ns1__GetVideoSourceModes, "-ns1:GetVideoSourceModes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVideoSourceModes(soap, &soap_tmp___ns1__GetVideoSourceModes, "-ns1:GetVideoSourceModes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetVideoSourceModes(_ns1__GetVideoSourceModesResponse &ns1__GetVideoSourceModesResponse)
{
	ns1__GetVideoSourceModesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetVideoSourceModesResponse.soap_get(soap, "ns1:GetVideoSourceModesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetVideoSourceMode(const char *soap_endpoint_url, const char *soap_action, _ns1__SetVideoSourceMode *ns1__SetVideoSourceMode)
{
	struct __ns1__SetVideoSourceMode soap_tmp___ns1__SetVideoSourceMode;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceMode";
	soap_tmp___ns1__SetVideoSourceMode.ns1__SetVideoSourceMode = ns1__SetVideoSourceMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetVideoSourceMode(soap, &soap_tmp___ns1__SetVideoSourceMode);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetVideoSourceMode(soap, &soap_tmp___ns1__SetVideoSourceMode, "-ns1:SetVideoSourceMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetVideoSourceMode(soap, &soap_tmp___ns1__SetVideoSourceMode, "-ns1:SetVideoSourceMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetVideoSourceMode(_ns1__SetVideoSourceModeResponse &ns1__SetVideoSourceModeResponse)
{
	ns1__SetVideoSourceModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetVideoSourceModeResponse.soap_get(soap, "ns1:SetVideoSourceModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetOSDs(const char *soap_endpoint_url, const char *soap_action, _ns1__GetOSDs *ns1__GetOSDs)
{
	struct __ns1__GetOSDs soap_tmp___ns1__GetOSDs;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetOSDs";
	soap_tmp___ns1__GetOSDs.ns1__GetOSDs = ns1__GetOSDs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetOSDs(soap, &soap_tmp___ns1__GetOSDs);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetOSDs(soap, &soap_tmp___ns1__GetOSDs, "-ns1:GetOSDs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetOSDs(soap, &soap_tmp___ns1__GetOSDs, "-ns1:GetOSDs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetOSDs(_ns1__GetOSDsResponse &ns1__GetOSDsResponse)
{
	ns1__GetOSDsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetOSDsResponse.soap_get(soap, "ns1:GetOSDsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetOSDOptions(const char *soap_endpoint_url, const char *soap_action, _ns1__GetOSDOptions *ns1__GetOSDOptions)
{
	struct __ns1__GetOSDOptions soap_tmp___ns1__GetOSDOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetOSDOptions";
	soap_tmp___ns1__GetOSDOptions.ns1__GetOSDOptions = ns1__GetOSDOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetOSDOptions(soap, &soap_tmp___ns1__GetOSDOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetOSDOptions(soap, &soap_tmp___ns1__GetOSDOptions, "-ns1:GetOSDOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetOSDOptions(soap, &soap_tmp___ns1__GetOSDOptions, "-ns1:GetOSDOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetOSDOptions(_ns1__GetOSDOptionsResponse &ns1__GetOSDOptionsResponse)
{
	ns1__GetOSDOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetOSDOptionsResponse.soap_get(soap, "ns1:GetOSDOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetOSD(const char *soap_endpoint_url, const char *soap_action, _ns1__SetOSD *ns1__SetOSD)
{
	struct __ns1__SetOSD soap_tmp___ns1__SetOSD;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetOSD";
	soap_tmp___ns1__SetOSD.ns1__SetOSD = ns1__SetOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetOSD(soap, &soap_tmp___ns1__SetOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetOSD(soap, &soap_tmp___ns1__SetOSD, "-ns1:SetOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetOSD(soap, &soap_tmp___ns1__SetOSD, "-ns1:SetOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetOSD(ns1__SetConfigurationResponse &ns1__SetOSDResponse)
{
	struct __ns1__SetOSDResponse *soap_tmp___ns1__SetOSDResponse;
	ns1__SetOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__SetOSDResponse = soap_get___ns1__SetOSDResponse(soap, NULL, "-ns1:SetOSDResponse", NULL);
	if (!soap_tmp___ns1__SetOSDResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__SetOSDResponse = soap_tmp___ns1__SetOSDResponse->ns1__SetOSDResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_CreateOSD(const char *soap_endpoint_url, const char *soap_action, _ns1__CreateOSD *ns1__CreateOSD)
{
	struct __ns1__CreateOSD soap_tmp___ns1__CreateOSD;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateOSD";
	soap_tmp___ns1__CreateOSD.ns1__CreateOSD = ns1__CreateOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateOSD(soap, &soap_tmp___ns1__CreateOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateOSD(soap, &soap_tmp___ns1__CreateOSD, "-ns1:CreateOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateOSD(soap, &soap_tmp___ns1__CreateOSD, "-ns1:CreateOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_CreateOSD(_ns1__CreateOSDResponse &ns1__CreateOSDResponse)
{
	ns1__CreateOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateOSDResponse.soap_get(soap, "ns1:CreateOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_DeleteOSD(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteOSD *ns1__DeleteOSD)
{
	struct __ns1__DeleteOSD soap_tmp___ns1__DeleteOSD;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteOSD";
	soap_tmp___ns1__DeleteOSD.ns1__DeleteOSD = ns1__DeleteOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteOSD(soap, &soap_tmp___ns1__DeleteOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteOSD(soap, &soap_tmp___ns1__DeleteOSD, "-ns1:DeleteOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteOSD(soap, &soap_tmp___ns1__DeleteOSD, "-ns1:DeleteOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_DeleteOSD(ns1__SetConfigurationResponse &ns1__DeleteOSDResponse)
{
	struct __ns1__DeleteOSDResponse *soap_tmp___ns1__DeleteOSDResponse;
	ns1__DeleteOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__DeleteOSDResponse = soap_get___ns1__DeleteOSDResponse(soap, NULL, "-ns1:DeleteOSDResponse", NULL);
	if (!soap_tmp___ns1__DeleteOSDResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__DeleteOSDResponse = soap_tmp___ns1__DeleteOSDResponse->ns1__DeleteOSDResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetMasks(const char *soap_endpoint_url, const char *soap_action, _ns1__GetMasks *ns1__GetMasks)
{
	struct __ns1__GetMasks soap_tmp___ns1__GetMasks;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMasks";
	soap_tmp___ns1__GetMasks.ns1__GetMasks = ns1__GetMasks;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMasks(soap, &soap_tmp___ns1__GetMasks);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMasks(soap, &soap_tmp___ns1__GetMasks, "-ns1:GetMasks", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMasks(soap, &soap_tmp___ns1__GetMasks, "-ns1:GetMasks", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetMasks(_ns1__GetMasksResponse &ns1__GetMasksResponse)
{
	ns1__GetMasksResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMasksResponse.soap_get(soap, "ns1:GetMasksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetMaskOptions(const char *soap_endpoint_url, const char *soap_action, _ns1__GetMaskOptions *ns1__GetMaskOptions)
{
	struct __ns1__GetMaskOptions soap_tmp___ns1__GetMaskOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMaskOptions";
	soap_tmp___ns1__GetMaskOptions.ns1__GetMaskOptions = ns1__GetMaskOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetMaskOptions(soap, &soap_tmp___ns1__GetMaskOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetMaskOptions(soap, &soap_tmp___ns1__GetMaskOptions, "-ns1:GetMaskOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetMaskOptions(soap, &soap_tmp___ns1__GetMaskOptions, "-ns1:GetMaskOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetMaskOptions(_ns1__GetMaskOptionsResponse &ns1__GetMaskOptionsResponse)
{
	ns1__GetMaskOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetMaskOptionsResponse.soap_get(soap, "ns1:GetMaskOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetMask(const char *soap_endpoint_url, const char *soap_action, _ns1__SetMask *ns1__SetMask)
{
	struct __ns1__SetMask soap_tmp___ns1__SetMask;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetMask";
	soap_tmp___ns1__SetMask.ns1__SetMask = ns1__SetMask;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetMask(soap, &soap_tmp___ns1__SetMask);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetMask(soap, &soap_tmp___ns1__SetMask, "-ns1:SetMask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetMask(soap, &soap_tmp___ns1__SetMask, "-ns1:SetMask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetMask(ns1__SetConfigurationResponse &ns1__SetMaskResponse)
{
	struct __ns1__SetMaskResponse *soap_tmp___ns1__SetMaskResponse;
	ns1__SetMaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__SetMaskResponse = soap_get___ns1__SetMaskResponse(soap, NULL, "-ns1:SetMaskResponse", NULL);
	if (!soap_tmp___ns1__SetMaskResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__SetMaskResponse = soap_tmp___ns1__SetMaskResponse->ns1__SetMaskResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_CreateMask(const char *soap_endpoint_url, const char *soap_action, _ns1__CreateMask *ns1__CreateMask)
{
	struct __ns1__CreateMask soap_tmp___ns1__CreateMask;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateMask";
	soap_tmp___ns1__CreateMask.ns1__CreateMask = ns1__CreateMask;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateMask(soap, &soap_tmp___ns1__CreateMask);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateMask(soap, &soap_tmp___ns1__CreateMask, "-ns1:CreateMask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateMask(soap, &soap_tmp___ns1__CreateMask, "-ns1:CreateMask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_CreateMask(_ns1__CreateMaskResponse &ns1__CreateMaskResponse)
{
	ns1__CreateMaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateMaskResponse.soap_get(soap, "ns1:CreateMaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_DeleteMask(const char *soap_endpoint_url, const char *soap_action, _ns1__DeleteMask *ns1__DeleteMask)
{
	struct __ns1__DeleteMask soap_tmp___ns1__DeleteMask;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteMask";
	soap_tmp___ns1__DeleteMask.ns1__DeleteMask = ns1__DeleteMask;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteMask(soap, &soap_tmp___ns1__DeleteMask);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteMask(soap, &soap_tmp___ns1__DeleteMask, "-ns1:DeleteMask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteMask(soap, &soap_tmp___ns1__DeleteMask, "-ns1:DeleteMask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_DeleteMask(ns1__SetConfigurationResponse &ns1__DeleteMaskResponse)
{
	struct __ns1__DeleteMaskResponse *soap_tmp___ns1__DeleteMaskResponse;
	ns1__DeleteMaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__DeleteMaskResponse = soap_get___ns1__DeleteMaskResponse(soap, NULL, "-ns1:DeleteMaskResponse", NULL);
	if (!soap_tmp___ns1__DeleteMaskResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns1__DeleteMaskResponse = soap_tmp___ns1__DeleteMaskResponse->ns1__DeleteMaskResponse;
	return soap_closesock(soap);
}
/* End of client proxy code */
